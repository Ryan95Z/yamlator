start: instructions+

?instructions: enum
            | main_ruleset
            | ruleset

type: int_type
     | str_type
     | list_type
     | map_type
     | any_type
     | enum_type
     | ruleset_type

str_type: "str"
int_type: "int"
any_type: "any"
list_type: "list""(" type ")"
map_type: "map""(" type ")"
ruleset_type: "("/[a-zA-Z0-9]+/")"
enum_type: /[A-Z]{1}[a-z0-9_]+/

primitives: ESCAPED_STRING
          | INT -> number

?rule: required_rule
     | optional_rule

required_rule: /[a-zA-Z0-9_]+/ type "required"
             | /[a-zA-Z0-9_]+/ type
optional_rule: /[a-zA-Z0-9_]+/ type "optional"

main_ruleset: "ruleset" "main" "{" rule+ "}"
ruleset: "ruleset" /[a-z]+/ "{" rule+ "}"


enum: "enum" /[A-Z]{1}[a-z0-9_]+/ "{" enum_item+ "}"
enum_item: /[A-Z0-9_]+/ "=" /[A-Za-z0-9_]+/

NEW_LINES: "\n"+

%import common.INT
%import common.ESCAPED_STRING
%import common.WS
%ignore WS
%ignore NEW_LINES